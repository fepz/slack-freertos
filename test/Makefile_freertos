# This file is based in the one automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN = #/path/to/gcc/bin
PROJECT = libfreertos
OBJECTS = ./tasks.o ./queue.o ./list.o ./heap_1.o ./port.o
INCLUDE_PATHS = -I/include -I/portable -I.

############################################################################### 
AR		= $(GCC_BIN)arm-none-eabi-ar
CC      = $(GCC_BIN)arm-none-eabi-gcc

CPU = -mcpu=cortex-m3 -mthumb
CC_FLAGS = $(CPU) -c -fmessage-length=0 -fno-exceptions -ffunction-sections -fdata-sections -fno-builtin -Wall 
CC_FLAGS += -MMD -MP
CC_SYMBOLS = -D__REDLIB__ -D__CODE_RED -DTARGET_LPC1768 -DTARGET_M3 -DTARGET_NXP -DTARGET_LPC176X -DTARGET_MBED_LPC1768 -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -D__CORTEX_M3 -DARM_MATH_CM3 -DTASK_CNT=$(TASK_CNT) -DRELEASE_CNT=$(RELEASE_CNT) -DSLACK=$(SLACK) -DSLACK_K=$(SLACK_K) -DSLACK_METHOD=$(SLACK_METHOD)

AR_FLAGS = -r

ifeq ($(DEBUG), 1)
  CC_FLAGS += -Og -g3
  CC_SYMBOLS += -DDEBUG
else
  CC_FLAGS += -O3
  CC_SYMBOLS += -DNDEBUG
endif

all: $(PROJECT).a

clean:
	rm -f $(PROJECT).a $(OBJECTS) $(DEPS)

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99 $(INCLUDE_PATHS) -o $@ $<

$(PROJECT).a: $(OBJECTS)
	$(AR) $(AR_FLAGS) $@ $^ 

DEPS = $(OBJECTS:.o=.d)
-include $(DEPS)
